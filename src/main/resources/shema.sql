DROP TABLE PUBLIC.FILM_GANRE;
DROP TABLE PUBLIC.LIKES;
DROP TABLE PUBLIC.FILMS;
DROP TABLE PUBLIC.FRIENDS;
DROP TABLE PUBLIC.GANRES;
DROP TABLE PUBLIC.USERS;
DROP TABLE PUBLIC.RATING;

CREATE TABLE PUBLIC.USERS (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR_IGNORECASE NOT NULL,
	LOGIN VARCHAR_IGNORECASE NOT NULL,
	NAME VARCHAR_IGNORECASE NOT NULL,
	BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_4 ON PUBLIC.USERS (USER_ID);

CREATE TABLE PUBLIC.GANRES (
	GANRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR_IGNORECASE NOT NULL,
	CONSTRAINT GANRES_PK PRIMARY KEY (GANRE_ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_7 ON PUBLIC.GANRES (GANRE_ID);

CREATE TABLE PUBLIC.RATING (
	RATING_ID INTEGER NOT NULL,
	NAME VARCHAR_IGNORECASE NOT NULL,
	CONSTRAINT RATING_PK PRIMARY KEY (RATING_ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_8 ON PUBLIC.RATING (RATING_ID);

CREATE TABLE PUBLIC.FILMS (
	FILM_ID INTEGER NOT NULL,
	NAME VARCHAR_IGNORECASE NOT NULL,
	DESCRIPTION VARCHAR_IGNORECASE NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	DURATION INTEGER NOT NULL,
	RATING_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILMS_RATING_FK PRIMARY KEY (RATING_ID,RATING_ID),
	CONSTRAINT FILMS_RATING_FK FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING(RATING_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX FILMS_RATING_FK_INDEX_3 ON PUBLIC.FILMS (RATING_ID);
CREATE UNIQUE INDEX PRIMARY_KEY_3 ON PUBLIC.FILMS (FILM_ID);

CREATE TABLE PUBLIC.FRIENDS (
	USER_ID INTEGER NOT NULL,
	FRIEND_ID INTEGER,
	CONSTRAINT FRIENDS_USERS_FK PRIMARY KEY (USER_ID,USER_ID),
	CONSTRAINT FRIENDS_USERS_FK_1 PRIMARY KEY (USER_ID,FRIEND_ID),
	CONSTRAINT FRIENDS_USERS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FRIENDS_USERS_FK_1 FOREIGN KEY (FRIEND_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX FRIENDS_USERS_FK_1_INDEX_7 ON PUBLIC.FRIENDS (FRIEND_ID);
CREATE INDEX FRIENDS_USERS_FK_INDEX_7 ON PUBLIC.FRIENDS (USER_ID);

CREATE TABLE PUBLIC.FILM_GANRE (
	FILM_ID INTEGER NOT NULL,
	GANRE_ID INTEGER NOT NULL,
	CONSTRAINT FILM_GANRE_FILMS_FK PRIMARY KEY (FILM_ID,FILM_ID),
	CONSTRAINT FILM_GANRE_GANRES_FK PRIMARY KEY (GANRE_ID,GANRE_ID),
	CONSTRAINT FILM_GANRE_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FILM_GANRE_GANRES_FK FOREIGN KEY (GANRE_ID) REFERENCES PUBLIC.GANRES(GANRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX FILM_GANRE_FILMS_FK_INDEX_7 ON PUBLIC.FILM_GANRE (FILM_ID);
CREATE INDEX FILM_GANRE_GANRES_FK_INDEX_7 ON PUBLIC.FILM_GANRE (GANRE_ID);

CREATE TABLE PUBLIC.LIKES (
	FILM_ID INTEGER NOT NULL,
	USER_ID INTEGER NOT NULL,
	CONSTRAINT LIKES_FILMS_FK PRIMARY KEY (FILM_ID,FILM_ID),
	CONSTRAINT LIKES_USERS_FK PRIMARY KEY (USER_ID,USER_ID),
	CONSTRAINT LIKES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT LIKES_USERS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX LIKES_FILMS_FK_INDEX_4 ON PUBLIC.LIKES (FILM_ID);
CREATE INDEX LIKES_USERS_FK_INDEX_4 ON PUBLIC.LIKES (USER_ID);